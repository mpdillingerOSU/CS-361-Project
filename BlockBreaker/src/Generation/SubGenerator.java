package Generation;

public abstract class SubGenerator {
    public final String NAME;

    /**
     Used to procedurally generate the content of the instance. All child classes are
     expected to code their own algorithm by which the content is generated.
     @return content generated by the instance.
     */
    protected abstract String generateContent();

    /**
     Instantiates a [SubGenerator] with the given name. All child classes are expected to
     hard-code the [NAME] argument that is used here.
     @param NAME name of the instance
     */
    public SubGenerator(final String NAME){
        this.NAME = NAME;
    }

    /**
     Procedurally generates content by use of the [generateContent] that is written for
     the instance.
     @return node representing generated content
     */
    public final GenerationNode generate(){
        return new GenerationNode(NAME, generateContent());
    }

    @Override
    public String toString(){
        return NAME;
    }
}
